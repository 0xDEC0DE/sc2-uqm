Before doing any non-trivial, please discuss it first in the IRC channel
(channel #sc2 at irc.freenode.net), or the mailing list
(sc2-devel@lists.sourceforge.net). Be sure to be in agreement with the
people actually working on the project; it would be a shame if you put a lot
of effort into something, and then having to find out it won't be accepted
into the cvs tree. Note that v1.0 will pretty much be a straight port,
with no gameplay-altering features added.

Serious bugs (crash the game, high priority):
- The game crashes when there's no sound driver available
- In melee, after battle, the game crashes.
  The ship icon is used when already freed. This happens because the old
  3DO code used to save the entire selection window as one image, while
  Chris' new code redraws after each round.
  Possible solutions:
  - revert to the old behaviour
  - delay the free until the memory is really no longer needed.
    Make sure that the memory is always freed, so no memory leak is
    introduced.
  - reload the icon when needed
  It looks like the same bug is present for the full game, though it isn't
  fatal there (the memory is freed but not yet overwritten).
- loading an old game crashes the game (at least on Linux).
- Communication screens nonrepeatably but inevitably hang the system.  This
  is probably a deadlock issue.
- Script bugs where a voice is expected yet not specified appear to make
  the game catatonic (e.g. ZoqFotPik's "Good bye Captain."  "See ya.")
- When trying to skip past a a speech that's composed of multiple parts,
  the game hangs.  (NOTE: This isn't true for the Zoq-Fot-Pik, which is
  unusual - EVERY line by the ZFP is like that.)

Glitches (don't crash the game, medium priority):
- When fast forwarding voices, sound stops. (SDL_mixer cannot start a sample
  from anywhere but the start)
- pressing arrow keys in the main menu moves the selection in the
  wrong direction (both left, right and up, down)
- The melnorme don't charge for fuel when you ask "fill 'er up"
  Instead, they pay you a Credit.
- Autopilot indicator keeps blinking when entering combat, when autopilot
  was on.
- savegames created in a game from debug and release compiles are not
  interchangable
- momentary slowdown of scrolling in hyperspace about once per second
  You can see this if you look very closely, or increase the resolution of
  the frame counter to 10 times per second and start with -ttl.
- Outfit Starship's module graphics look reasonably in the lbm/ directory
  but are hideously scrambled when you're trying to buy them.
- Shipyard is using the PC background but the 3DO layout.
- Shipyard's PC background is not animating.
- Palette is probably corrupted on some things
  - Because not all 3DO colormap entries map correctly to png files
    (those images originate from pc version? or converted badly? etc)
  - Most can be fixed by changing colormap_index to -1 from
    *.ani, *.sml, *.med, *.big files where corrupted image is listed, so
	it only uses png file's palette and not 3DO one (prevents palette
	effects from working, though)
  - See doc/devel/aniformat
- Other palette related problems:
  - In quasispace, sis ship should be colored as green, not red
  - Melnorme, slylandro, etc palette transition isn't smooth
  - Melnorme bridge doesn't turn purple for second or later visits
- When landing to planet surface, crossfaded image is wrong compared to
  landing position (and so 'flashes' when crossfade ends)
- Flashing rects aren't perhaps always exactly the size of actual 3do version,
  it should be checked (for example when selecting ship in fullgame battle)

Implementation bugs (low priority):
- The main thread is still created by a direct all to the SDL function,
  instead of through the thread lib. It would cause a crash otherwise.
  Probably the memlib isn't initialised then (which the thread lib uses).

Stuff still to do (large):
- add a Key Jamming program
- add some way to configure your keys
- add some way to configure the PC/3DO choices.
- Actually implement the differences between PC and 3DO versions, including
  the alternate scripts (even the basic dialogue is not identical)
- make stuff endian-safe
  In particularly 24-bits scaling is known to be unsafe.
- 3d planet view when entering orbit
- some packaging system for resources. zlib looks like something
  which is suitable for this.
- reconcile all of the differences between the voice (3DO) script and the
  text script, then do it all again for the PC version.  This will involve
  extensive poking around the 3DO game to make sure that the Human Captain's
  lines are all correct, too.
- Match timing between subtitles and speech clips
- Intro and end credits (both 3DO and PC version ones)
- add an install program (in particularly for Windows).
  How to handle the libraries?

Stuff still to do (medium size):
- oscilloscope
- loading teams in melee
- pixel-perfect collision checks
- remove libtool dependancy
  This will probably mean the empty dummy.c files can be removed too.
  (note that src/sc2code/dummy.c DOES contain data)
- lines and colouring of planet surface display when scanning.
  Its speed isn't correct either.
- get all code to compile without warnings, when the most strict
  checks are performed (not just -W -Wall in gcc)
- try to speed up resource loading. It looks to be much slower now
  than it needs to be.
- Convert bulky media files into more compact representations
- planet surface smoothing

Stuff still to do (small):
- make sure save files are independant of endianness, so that Mac savefiles
  can be used on the pc (and the other way around).
- make a file types.h, which defines non-confusing integer types.
  There are at the moment 3 systems: int16, DWORD, and Sint16.
  I suggest we keep int16, as 'word' is confusing. Sint16 is an SDL define
  and should only be used in SDL calls.

Questions:
- remove src/sc2code/test.c?
- Is there some way to automatically do CRLF translations on commits,
  with the -t and -f options in cvswrapper disabled by sourceforge?
- What is the displist stuff for? Is it needed at all?
- Do we want another utils/ dir? It could be useful, to put all the conversion
  tools we use(d).
- are there still threads killing themselves instead of just exiting?
  Answer: "find . -name \*.c | xargs grep Killthread" says "no."
- w_memlib used (now commented out) MS Windows functions to show messages
  when memory couldn't be allocated. If we want to have those return, some
  work will have to be done. If not, there's some dead code to remove.
- The functions like HMalloc don't guarantee success, so checks should be
  done, and are even done in some places. But it might make more sense to
  let HMalloc abort the program if it fails (there's little to do anyhow),
  so we can rely on HMalloc returning a non-NULL value.
  If we want, we could allocate a block of reserve memory at the start,
  which we can free when no more memory is available, to allow an emergency
  save.
- How about an ISO image for a self-contained linux CD which boots into SC2?
- Currently speechs and mod music doesn't sound very good as SDL_mixer
  doesn't interpolate them in any way.. 11khz data really needs that,
  compare the wavs to winamp for example.
  Should we add that functionality to SDL_mixer ourselves, or implement
  all mixing from scratch using only base SDL audio, or what?
