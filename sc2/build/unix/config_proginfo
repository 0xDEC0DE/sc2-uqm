# Set information on used programs and libraries
# Copyright (c) 2002 Serge van den Boom
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

OSNAME=`uname -s`

##############################################################################
# Describe the programs (possibly) used:                                     #
##############################################################################


### gcc ###
PROG_gcc_NAME="GNU C compiler"
PROG_gcc_FILE="gcc"
PROG_gcc_ACTION=""
PROG_gcc_VERSION='$(gcc --version)'


### sed ###
PROG_sed_NAME="Sed stream editor"
PROG_sed_FILE="sed"
PROG_sed_ACTION=""
PROG_sed_VERSION=''


### echo -n ###
PROG_echon_NAME="'echo -n' capable echo"
PROG_echon_FILE=""
PROG_echon_ACTION=""
PROG_echon_VERSION=''
PROG_echon_DETECT="echon_detect"
echon_detect() {
	local TEST LOCATIONS LOCATION
	
	# Default echo (probably builtin)
	TEST=`echo -n X`
	if [ "$TEST" = X ]; then
		PROG_echon_FILE="echo -n"
		return 0;
	fi

	# External echo
	LOCATIONS="/bin/ /usr/ucb/"
	for LOCATION in $LOCATIONS; do
		if [ -x ${LOCATION}echo ]; then
			TEST=`${LOCATION}echo -n X`
			if [ "$TEST" = X ]; then
				PROG_echon_FILE="${LOCATION}echo -n"
				return 0;
			fi
		fi
	done

	# Using printf as echo
	TEST=`printf %s X`
	if [ "$TEST" = X ]; then
		PROG_echon_FILE="printf %s"
		return 0;
	fi

	# No good echo found	
	return 1
}


### GNU Make ###
PROG_make_NAME="Make"
case "$OSNAME" in
	FreeBSD|OpenBSD|SunOS)
		PROG_make_FILE="gmake"
		;;
	*)
		PROG_make_FILE="make"
		;;
esac
PROG_make_ACTION=""
PROG_make_VERSION=''


### tr ###
PROG_tr_NAME="tr"
PROG_tr_FILE="tr"
PROG_tr_ACTION=""
PROG_tr_VERSION=''


### windres (for Windows) ###
PROG_windres_NAME=windres
PROG_windres_FILE=windres
PROG_windres_ACTION=""
PROG_windres_VERSION='windres --version'


### Rez resource compiler (for MacOS X) only ###
PROG_Rez_NAME="Rez resource compiler (Apple Developer Tools)"
PROG_Rez_FILE="/Developer/Tools/Rez"
PROG_Rez_ACTION=""
PROG_Rez_VERSION=''


### pkg-config ###
PROG_pkgconfig_NAME="pkg-config"
PROG_pkgconfig_FILE="pkg-config"
PROG_pkgconfig_ACTION=""
PROG_pkgconfig_VERSION='$(pkg-config --version)'


##############################################################################
# Describe the libaries (possibly) used:                                     #
##############################################################################


### SDL ###
LIB_SDL_NAME="Simple DirectMedia Layer"
case "$OSNAME" in
	FreeBSD)
		LIB_SDL_CFLAGS='$(sdl11-config --cflags)'
		LIB_SDL_LDFLAGS='$(sdl11-config --libs)'
		LIB_SDL_VERSION='$(sdl11-config --version)'
		;;
	Darwin)
		LIB_SDL_CFLAGS=''
		LIB_SDL_LDFLAGS='-framework SDL -framework Cocoa -lobjc'
		LIB_SDL_VERSION=$(echo \
                      "SDL_MAJOR_VERSION.SDL_MINOR_VERSION.SDL_PATCHLEVEL" | \
                      gcc -E -include SDL_version.h $LIB_SDL_CFLAGS - | \
                      tail -1 | tr -d ' ')
		;;
	*)
		LIB_SDL_CFLAGS='$(sdl-config --cflags)'
		LIB_SDL_LDFLAGS='$(sdl-config --libs)'
		LIB_SDL_VERSION='$(sdl-config --version)'
		;;
esac


### SDL_mixer ###
LIB_SDL_mixer_NAME="SDL_mixer"
LIB_SDL_mixer_CFLAGS="$LIB_SDL_CFLAGS"
LIB_SDL_mixer_LDFLAGS="$LIB_SDL_LDFLAGS -lSDL_mixer"
LIB_SDL_mixer_VERSION=""


### SDL_image ###
LIB_SDL_image_NAME="SDL_image"
case "$OSNAME" in
	Darwin)
		LIB_SDL_image_CFLAGS=''
		LIB_SDL_image_LDFLAGS="-framework SDL_image"
	;;
	*)
		LIB_SDL_image_CFLAGS="$LIB_SDL_CFLAGS"
		LIB_SDL_image_LDFLAGS="$LIB_SDL_LDFLAGS -lSDL_image"
		;;
esac
LIB_SDL_image_VERSION=""


### OpenAL ###
LIB_openal_NAME="OpenAL"
LIB_openal_CFLAGS=""
case "$OSNAME" in
	FreeBSD|OpenBSD)
		LIB_openal_LDFLAGS="-L/usr/local/lib -pthread -lopenal"
		;;
	MINGW32*)
		LIB_openal_LDFLAGS="-lopenal32"
		;;
	Darwin)
		LIB_openal_CFLAGS=''
		LIB_openal_LDFLAGS="-framework OpenAL"
		;;
	*)
		LIB_openal_LDFLAGS="-lopenal"
		;;
esac
LIB_openal_VERSION=""
LIB_openal_DETECT="try_pkgconfig_lib openal openal"
LIB_openal_DEPEND_DETECT_BIN="pkgconfig"


### OpenGL ###
LIB_opengl_NAME="OpenGL"
case "$OSNAME" in
	FreeBSD|OpenBSD)
		LIB_opengl_CFLAGS="-I/usr/X11R6/include -D_THREAD_SAFE"
		LIB_opengl_LDFLAGS="-L/usr/X11R6/lib -lX11 -lXext -pthread -lGL"
		;;
	MINGW32*)
		LIB_opengl_CFLAGS=""
		LIB_opengl_LDFLAGS="-lopengl32"
		;;
	Darwin)
		LIB_opengl_CFLAGS=""
		LIB_opengl_LDFLAGS="-framework OpenGL"
		;;
	*)
		LIB_opengl_CFLAGS=""
		LIB_opengl_LDFLAGS="-lGL"
		;;
esac
LIB_opengl_VERSION=""


### Vorbis ###
LIB_vorbis_NAME="libvorbis"
LIB_vorbis_CFLAGS=""
LIB_vorbis_LDFLAGS="-lvorbis"
LIB_vorbis_VERSION=""


### Vorbisfile ###
LIB_vorbisfile_NAME="vorbisfile"
case "$OSNAME" in
	FreeBSD|OpenBSD)
		LIB_vorbisfile_CFLAGS="-I/usr/local/include"
		LIB_vorbisfile_LDFLAGS="-L/usr/local/lib -lvorbisfile -lvorbis"
		;;
	Darwin)
		LIB_vorbisfile_CFLAGS="-D__MACOSX__"
		LIB_vorbisfile_LDFLAGS="-framework Ogg -framework Vorbis"
		;;
	QNX)
		LIB_vorbisfile_CFLAGS=""
		LIB_vorbisfile_LDFLAGS="-lvorbisfile -lvorbis -logg -lm"
		;;
	*)
		LIB_vorbisfile_CFLAGS=""
		LIB_vorbisfile_LDFLAGS="-lvorbisfile -lvorbis"
		;;
esac
LIB_vorbisfile_VERSION=""
LIB_vorbisfile_DETECT="try_pkgconfig_lib vorbisfile vorbisfile"
LIB_vorbisfile_DEPEND_DETECT_BIN="pkgconfig"


### zlib ###
LIB_zlib_NAME="zlib"
LIB_zlib_CFLAGS=""
LIB_zlib_LDFLAGS="-lz"
LIB_zlib_VERSION=""
LIB_zlib_DETECT="try_pkgconfig_lib zlib zlib"
LIB_zlib_DEPEND_DETECT_BIN="pkgconfig"


##############################################################################
# Describe the symbols (possibly) used:                                      #
##############################################################################

HEADER_regex_EXTRA="#include <sys/types.h>"

SYMBOL_readdir_r_EXTRA="#include <dirent.h>"

SYMBOL_setenv_EXTRA="#include <stdlib.h>"

SYMBOL_stricmp_EXTRA="#include <string.h>"

SYMBOL_strupr_EXTRA="#include <string.h>"

SYMBOL_wchar_t_EXTRA="#include <stddef.h>"

SYMBOL_wint_t_EXTRA="#include <wchar.h>"

SYMBOL_iswgraph_EXTRA="#include <wctype.h>"

